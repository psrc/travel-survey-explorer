rs %<>% setnames(grpvars, paste0(pfx, sfx[[2]])) %>%
.[, `:=`(demographic_category = rbind(..demography, ..geography)[report_var==(grpvars[[1]])]$label,
travel_category = ..topics[report_var==(grpvars[[2]])]$label, adult=NULL)] %>%
setcolorder(c("survey_year", paste0(pfx[[1]], sfx), paste0(pfx[[2]], sfx)))
}
# Retrieve HTS data & add variables ---
hts_data <- get_psrc_hts(survey_vars=c(topics$query_var, geography$query_var, demography$query_var))
hts_data %<>%
hts_bin_dest_purpose() %>%
hts_bin_income() %>%
hts_bin_hhsize() %>%
#  hts_bin_vehicle_count() %>%
hts_bin_age() %>%
hts_bin_worker() %>%
hts_bin_gender() %>%
hts_bin_sexuality() %>%
hts_bin_rent_own() %>%
hts_bin_mode()
hts_data$hh %<>%
.[, home_in_seattle:=factor(fcase(home_jurisdiction=="Seattle", "Seattle",
!is.na(home_jurisdiction), NA_character_),
levels=c("Seattle"))]
# Generate summaries ------------------
summary <- lapply(var_combos,count_adult_trips)
summary_labeled <- rbindlist(summary)
saveRDS(summary_labeled, 'hts_tbl_4_shiny.rds')
shiny::runApp()
View(summary_tbl)
runApp()
runApp()
runApp()
runApp()
runApp()
View(summary_labeled)
?interactive_column_chart
runApp()
runApp()
runApp()
runApp()
runApp()
deployApp()
rsconnect::deployApp()
runApp()
devtools::install_github('psrc/psrc.travelsurvey')
shiny::runApp()
runApp()
runApp()
library(magrittr)
library(psrc.travelsurvey)
library(stringr)
library(data.table)
topics <- data.frame(
query_var =  c("mode_characterization",
"dest_purpose"),
report_var = c("mode_basic",
"dest_purpose_bin4"),
label =      c("Trip Mode",
"Trip Purpose")
) %>% setDT()
geography <- data.frame(
query_var =  c("home_county",
"home_jurisdiction"),
report_var = c("home_county",
"home_in_seattle"),
label =      c("Home County",
"Home in Seattle")
) %>% setDT()
demography      <- data.frame(
query_var =  c("hhincome_broad",
"hhsize",
"age",
"employment",
"disability_person",
"hh_race_category",
#"vehicle_count",
"gender",
"sexuality",
"rent_own"),
report_var = c("hhincome_bin3",
"hhsize_bin4",
"age_bin5",
"worker",
"disability_person",
"hh_race_category",
#"vehicle_yn",
"gender_bin3",
"sexuality_bin3",
"rent_own_bin2"),
label  =     c("Household Income",
"Household Size",
"Age Group",
"Worker Status",
"Disability Status",
"Household Race",
#"Presence of vehicle",
"Gender Identity",
"Sexuality",
"Home Rent or Own")
) %>% setDT()
var_combos <- expand.grid(c(geography$report_var, demography$report_var), topics$report_var) %>%
transpose() %>% lapply(c)
# Helper functions --------------------
count_adult_trips <- function(grpvars){
pfx <- c("demographic_", "travel_")
sfx <- c("category", "attribute")
hts_data2 <- copy(hts_data)
if(any("disability_person" %in% grpvars)){  # -- disability is new in 2023
hts_data2 %<>% lapply(FUN=function(x) dplyr::filter(x, survey_year==2023))
}
rs <- psrc_hts_stat(hts_data2, "trip", group_vars=c("adult", grpvars), incl_na=FALSE) %>% setDT()
rs %<>% setnames(grpvars, paste0(pfx, sfx[[2]])) %>%
.[, `:=`(demographic_category = rbind(..demography, ..geography)[report_var==(grpvars[[1]])]$label,
travel_category = ..topics[report_var==(grpvars[[2]])]$label, adult=NULL)] %>%
setcolorder(c("survey_year", paste0(pfx[[1]], sfx), paste0(pfx[[2]], sfx)))
}
# Retrieve HTS data & add variables ---
hts_data <- get_psrc_hts(survey_vars=c(topics$query_var, geography$query_var, demography$query_var))
hts_data %<>%
hts_bin_dest_purpose() %>%
hts_bin_income() %>%
hts_bin_hhsize() %>%
#  hts_bin_vehicle_count() %>%
hts_bin_age() %>%
hts_bin_worker() %>%
hts_bin_gender() %>%
hts_bin_sexuality() %>%
hts_bin_rent_own() %>%
hts_bin_mode()
hts_data$hh %<>%
.[, home_in_seattle:=factor(fcase(home_jurisdiction=="Seattle", "Seattle",
!is.na(home_jurisdiction), NA_character_),
levels=c("Seattle"))]
# Generate summaries ------------------
summary <- lapply(var_combos,count_adult_trips)
getwd()
summary_labeled <- rbindlist(summary)
saveRDS(summary_labeled, 'hts_tbl_4_shiny.rds')
runApp()
View(summary_labeled)
devtools::install_github('psrc/psrc.travelsurvey')
library(magrittr)
library(psrc.travelsurvey)
library(stringr)
library(data.table)
topics <- data.frame(
query_var =  c("mode_characterization",
"dest_purpose"),
report_var = c("mode_basic",
"dest_purpose_bin4"),
label =      c("Trip Mode",
"Trip Purpose")
) %>% setDT()
geography <- data.frame(
query_var =  c("home_county",
"home_jurisdiction"),
report_var = c("home_county",
"home_in_seattle"),
label =      c("Home County",
"Home in Seattle")
) %>% setDT()
demography      <- data.frame(
query_var =  c("hhincome_broad",
"hhsize",
"age",
"employment",
"disability_person",
"hh_race_category",
#"vehicle_count",
"gender",
"sexuality",
"rent_own"),
report_var = c("hhincome_bin3",
"hhsize_bin4",
"age_bin5",
"worker",
"disability_person",
"hh_race_category",
#"vehicle_yn",
"gender_bin3",
"sexuality_bin3",
"rent_own_bin2"),
label  =     c("Household Income",
"Household Size",
"Age Group",
"Worker Status",
"Disability Status",
"Household Race",
#"Presence of vehicle",
"Gender Identity",
"Sexuality",
"Home Rent or Own")
) %>% setDT()
var_combos <- expand.grid(c(geography$report_var, demography$report_var), topics$report_var) %>%
transpose() %>% lapply(c)
# Helper functions --------------------
count_adult_trips <- function(grpvars){
pfx <- c("demographic_", "travel_")
sfx <- c("category", "attribute")
hts_data2 <- copy(hts_data)
if(any("disability_person" %in% grpvars)){  # -- disability is new in 2023
hts_data2 %<>% lapply(FUN=function(x) dplyr::filter(x, survey_year==2023))
}
rs <- psrc_hts_stat(hts_data2, "trip", group_vars=c("adult", grpvars), incl_na=FALSE) %>% setDT()
rs %<>% setnames(grpvars, paste0(pfx, sfx[[2]])) %>%
.[, `:=`(demographic_category = rbind(..demography, ..geography)[report_var==(grpvars[[1]])]$label,
travel_category = ..topics[report_var==(grpvars[[2]])]$label, adult=NULL)] %>%
setcolorder(c("survey_year", paste0(pfx[[1]], sfx), paste0(pfx[[2]], sfx)))
}
# Retrieve HTS data & add variables ---
hts_data <- get_psrc_hts(survey_vars=c(topics$query_var, geography$query_var, demography$query_var))
library(magrittr)
library(psrc.travelsurvey)
library(stringr)
library(data.table)
topics <- data.frame(
query_var =  c("mode_characterization",
"dest_purpose"),
report_var = c("mode_basic",
"dest_purpose_bin4"),
label =      c("Trip Mode",
"Trip Purpose")
) %>% setDT()
geography <- data.frame(
query_var =  c("home_county",
"home_jurisdiction"),
report_var = c("home_county",
"home_in_seattle"),
label =      c("Home County",
"Home in Seattle")
) %>% setDT()
demography      <- data.frame(
query_var =  c("hhincome_broad",
"hhsize",
"age",
"employment",
"disability_person",
"hh_race_category",
#"vehicle_count",
"gender",
"sexuality",
"rent_own"),
report_var = c("hhincome_bin3",
"hhsize_bin4",
"age_bin5",
"worker",
"disability_person",
"hh_race_category",
#"vehicle_yn",
"gender_bin3",
"sexuality_bin3",
"rent_own_bin2"),
label  =     c("Household Income",
"Household Size",
"Age Group",
"Worker Status",
"Disability Status",
"Household Race",
#"Presence of vehicle",
"Gender Identity",
"Sexuality",
"Home Rent or Own")
) %>% setDT()
var_combos <- expand.grid(c(geography$report_var, demography$report_var), topics$report_var) %>%
transpose() %>% lapply(c)
# Helper functions --------------------
count_adult_trips <- function(grpvars){
pfx <- c("demographic_", "travel_")
sfx <- c("category", "attribute")
hts_data2 <- copy(hts_data)
if(any("disability_person" %in% grpvars)){  # -- disability is new in 2023
hts_data2 %<>% lapply(FUN=function(x) dplyr::filter(x, survey_year==2023))
}
rs <- psrc_hts_stat(hts_data2, "trip", group_vars=c("adult", grpvars), incl_na=FALSE) %>% setDT()
rs %<>% setnames(grpvars, paste0(pfx, sfx[[2]])) %>%
.[, `:=`(demographic_category = rbind(..demography, ..geography)[report_var==(grpvars[[1]])]$label,
travel_category = ..topics[report_var==(grpvars[[2]])]$label, adult=NULL)] %>%
setcolorder(c("survey_year", paste0(pfx[[1]], sfx), paste0(pfx[[2]], sfx)))
}
# Retrieve HTS data & add variables ---
hts_data <- get_psrc_hts(survey_vars=c(topics$query_var, geography$query_var, demography$query_var))
hts_data %<>%
hts_bin_dest_purpose() %>%
hts_bin_income() %>%
hts_bin_hhsize() %>%
#  hts_bin_vehicle_count() %>%
hts_bin_age() %>%
hts_bin_worker() %>%
hts_bin_gender() %>%
hts_bin_sexuality() %>%
hts_bin_rent_own() %>%
hts_bin_mode()
hts_data$hh %<>%
.[, home_in_seattle:=factor(fcase(home_jurisdiction=="Seattle", "Seattle",
!is.na(home_jurisdiction), NA_character_),
levels=c("Seattle"))]
# Generate summaries ------------------
summary <- lapply(var_combos,count_adult_trips)
summary_labeled <- rbindlist(summary)
saveRDS(summary_labeled, 'hts_tbl_4_shiny.rds')
View(summary_labeled)
shiny::runApp()
runApp()
runApp()
rsconnect::deployApp()
runApp()
runApp()
runApp()
runApp()
deployApp()
rsconnect::deployApp()
library(magrittr)
library(psrc.travelsurvey)
library(stringr)
library(data.table)
topics <- data.frame(
query_var =  c("mode_characterization",
"dest_purpose"),
report_var = c("mode_basic",
"dest_purpose_bin4"),
label =      c("Trip Mode",
"Trip Purpose")
) %>% setDT()
geography <- data.frame(
query_var =  c("home_county",
"home_jurisdiction"),
report_var = c("home_county",
"home_in_seattle"),
label =      c("Home County",
"Home in Seattle")
) %>% setDT()
demography      <- data.frame(
query_var =  c("hhincome_broad",
"race_category"
"hhsize",
library(magrittr)
library(psrc.travelsurvey)
library(stringr)
library(data.table)
topics <- data.frame(
query_var =  c("mode_characterization",
"dest_purpose"),
report_var = c("mode_basic",
"dest_purpose_bin4"),
label =      c("Trip Mode",
"Trip Purpose")
) %>% setDT()
geography <- data.frame(
query_var =  c("home_county",
"home_jurisdiction"),
report_var = c("home_county",
"home_in_seattle"),
label =      c("Home County",
"Home in Seattle")
) %>% setDT()
demography      <- data.frame(
query_var =  c("hhincome_broad",
"race_category",
"hhsize",
"age",
"employment",
"disability_person",
"hh_race_category",
#"vehicle_count",
"gender",
"sexuality",
"rent_own"),
report_var = c("hhincome_bin3",
"race_category"
"hhsize_bin4",
library(magrittr)
library(psrc.travelsurvey)
library(stringr)
library(data.table)
topics <- data.frame(
query_var =  c("mode_characterization",
"dest_purpose"),
report_var = c("mode_basic",
"dest_purpose_bin4"),
label =      c("Trip Mode",
"Trip Purpose")
) %>% setDT()
geography <- data.frame(
query_var =  c("home_county",
"home_jurisdiction"),
report_var = c("home_county",
"home_in_seattle"),
label =      c("Home County",
"Home in Seattle")
) %>% setDT()
demography      <- data.frame(
query_var =  c("hhincome_broad",
"race_category",
"hhsize",
"age",
"employment",
"disability_person",
"hh_race_category",
#"vehicle_count",
"gender",
"sexuality",
"rent_own"),
report_var = c("hhincome_bin3",
"race_category",
"hhsize_bin4",
"age_bin5",
"worker",
"disability_person",
"hh_race_category",
#"vehicle_yn",
"gender_bin3",
"sexuality_bin3",
"rent_own_bin2"),
label  =     c("Household Income",
"Person Race",
"Household Size,",
"Age Group",
"Worker Status",
"Disability Status",
"Household Race",
#"Presence of vehicle",
"Gender Identity",
"Sexuality",
"Home Rent or Own")
) %>% setDT()
var_combos <- expand.grid(c(geography$report_var, demography$report_var), topics$report_var) %>%
transpose() %>% lapply(c)
# Helper functions --------------------
count_adult_trips <- function(grpvars){
pfx <- c("demographic_", "travel_")
sfx <- c("category", "attribute")
hts_data2 <- copy(hts_data)
if(any("disability_person" %in% grpvars)){  # -- disability is new in 2023
hts_data2 %<>% lapply(FUN=function(x) dplyr::filter(x, survey_year==2023))
}
rs <- psrc_hts_stat(hts_data2, "trip", group_vars=c("adult", grpvars), incl_na=FALSE) %>% setDT()
rs %<>% setnames(grpvars, paste0(pfx, sfx[[2]])) %>%
.[, `:=`(demographic_category = rbind(..demography, ..geography)[report_var==(grpvars[[1]])]$label,
travel_category = ..topics[report_var==(grpvars[[2]])]$label, adult=NULL)] %>%
setcolorder(c("survey_year", paste0(pfx[[1]], sfx), paste0(pfx[[2]], sfx)))
}
# Retrieve HTS data & add variables ---
hts_data <- get_psrc_hts(survey_vars=c(topics$query_var, geography$query_var, demography$query_var))
hts_data %<>%
hts_bin_dest_purpose() %>%
hts_bin_income() %>%
hts_bin_hhsize() %>%
#  hts_bin_vehicle_count() %>%
hts_bin_age() %>%
hts_bin_worker() %>%
hts_bin_gender() %>%
hts_bin_sexuality() %>%
hts_bin_rent_own() %>%
hts_bin_mode()
hts_data$hh %<>%
.[, home_in_seattle:=factor(fcase(home_jurisdiction=="Seattle", "Seattle",
!is.na(home_jurisdiction), NA_character_),
levels=c("Seattle"))]
# Generate summaries ------------------
summary <- lapply(var_combos,count_adult_trips)
summary_labeled <- rbindlist(summary)
saveRDS(summary_labeled, 'hts_tbl_4_shiny.rds')
shiny::runApp()
rsconnect::deployApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
psrcplot::print_psrc_palette()
psrcplot::psrc_colors
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
psrc_colors
print_psrc_palette()
runApp()
runApp()
runApp()
View(summary_labeled)
runApp()
runApp()
View(summary_labeled)
runApp()
View(summary_tbl)
runApp()
View(summary_tbl)
View(summary_labeled)
runApp()
dataset()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rsconnect::deployApp()
runApp()
runApp()
runApp()
runApp()
